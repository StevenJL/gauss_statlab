<div class="leaderboard results">  
  <div class="row-fluid">
    <div class="span4">
      <table>
<!--    <tr><td class="stat-label">Sample 1 Size:</td><td id="n1"></td></tr>
        <tr><td class="stat-label">Sample 2 Size:</td><td id="n2"></td></tr>      
        <tr><td class="stat-label">Degrees of Freedom:</td><td id="df"></td></tr>
        <tr><td class="stat-label">T Test-Statistic:</td><td id="t-stat"></td></tr>
        <tr><td class="stat-label">P-Value:</td><td id="p-val"></td></tr> -->
      </table>
    </div>
    <div class="span6 graph">
    </div>
  </div>
</div>

<div class="form-actions">  
  <button type="button" class="btn btn-primary" id="compute-button">Compute</button>
</div>  

<div class="row-fluid">  
  <div class="span12">
    <form class="form-horizontal">  
      <fieldset>
        <div class="row offset1"><h4>Simple Linear Regresion</h4></div>
        <div class="row offset1" style="padding: 20px; margin-left: 50px; padding-bottom: 30px;" >
          <div class="span10">
            Enter the data sets
            <span class="stat-label">Instructions</span>
          </div>  
        </div>   
        <div class="control-group">  
          <label class="control-label" for="textarea1">Response Values</label>  
          <div class="controls">  
            <textarea class="input-xlarge" id="textarea1" rows="3">1,2,3,4,5,6,7,8,9</textarea>  
          </div>
        </div>  
        <div class="control-group">
          <label class="control-label" for="textarea2">Predictor Values</label>
          <div class="controls">  
            <textarea class="input-xlarge" id="textarea2" rows="3">4,5,6,7,8,9,10,11,12</textarea>  
          </div>
        </div>
      </fieldset>
    </form> 
  </div>
</div>

<script>

  $(".leaderboard").hide()
  $("#compute-button").on('click', function(){

    $(".graph").empty()

    var response = $("#textarea1").val().split(',')
    var predictor = $("#textarea2").val().split(',')

    var draw = function(){
      // debugger
      //Width and height
      var w = 500;
      var h = 300;
      var padding = 30;

      var dataset = [];                   
      var numDataPoints = response.length;              
      for (var i = 0; i < numDataPoints; i++) {                
          dataset.push([parseFloat(response[i]), parseFloat(predictor[i])]);              
      }
      // debugger

      //Create scale functions
      var xScale = d3.scale.linear()
                           .domain([0, d3.max(dataset, function(d) { return d[0]; })])
                           .range([padding, w - padding * 2]);

      var yScale = d3.scale.linear()
                           .domain([0, d3.max(dataset, function(d) { return d[1]; })])
                           .range([h - padding, padding]);

      var rScale = d3.scale.linear()
                           .domain([0, d3.max(dataset, function(d) { return d[1]; })])
                           .range([2, 5]);

      //Define X axis
      var xAxis = d3.svg.axis()
                        .scale(xScale)
                        .orient("bottom")
                        .ticks(5);

      //Define Y axis
      var yAxis = d3.svg.axis()
                        .scale(yScale)
                        .orient("left")
                        .ticks(5);

      //Create SVG element
      var svg = d3.select(".graph")
                  .append("svg")
                  .attr("width", w)
                  .attr("height", h);

      //Create circles
      svg.selectAll("circle")
         .data(dataset)
         .enter()
         .append("circle")
         .attr("cx", function(d) {
              return xScale(d[0]);
         })
         .attr("cy", function(d) {
              return yScale(d[1]);
         })
         .attr("r", 3);
      
      //Create X axis
      svg.append("g")
          .attr("class", "axis")
          .attr("transform", "translate(0," + (h - padding) + ")")
          .call(xAxis);
      
      //Create Y axis
      svg.append("g")
          .attr("class", "axis")
          .attr("transform", "translate(" + padding + ",0)")
          .call(yAxis);

    }

    $.ajax({
      url: '/two_sample_test/compute',
      data: { },
      success: function(data){
        draw()        
      }
    })

    $(".leaderboard").slideDown()
  })
</script>