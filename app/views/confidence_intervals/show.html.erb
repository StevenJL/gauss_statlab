<!DOCTYPE html>
<meta charset="utf-8">
<style>

</style>
<body>
<script>

var margin = {top: 10, right: 50, bottom: 20, left: 50},
    width = 120 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var min = Infinity,
    max = -Infinity;

var chart = d3.box()
    .whiskers(iqr(1.5))
    .width(width)
    .height(height);

  chart.domain([0, 35]);

  var data = [[1,2,3,3,4,5,6,7,6,4,4,2,34],[1,2,3,4,5,4,6,7,7,5,4,3,2,3,4,5],[1,2,3,5,7,5,4,4,5,7,7,10]]

  var svg = d3.select("body").selectAll("svg")
      .data(data)
    .enter().append("svg")
      .attr("class", "box")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.bottom + margin.top)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
      .call(chart);

  // setInterval(function() {
  //   svg.datum(randomize).call(chart.duration(1000));
  // }, 2000);
// });

// function randomize(d) {
//   if (!d.randomizer) d.randomizer = randomizer(d);
//   return d.map(d.randomizer);
// }

// function randomizer(d) {
//   var k = d3.max(d) * .02;
//   return function(d) {
//     return Math.max(min, Math.min(max, d + k * (Math.random() - .5)));
//   };
// }

// Returns a function to compute the interquartile range.
function iqr(k) {
  return function(d, i) {
    var q1 = d.quartiles[0],
        q3 = d.quartiles[2],
        iqr = (q3 - q1) * k,
        i = -1,
        j = d.length;
    while (d[++i] < q1 - iqr);
    while (d[--j] > q3 + iqr);
    return [i, j];
  };
}

</script>